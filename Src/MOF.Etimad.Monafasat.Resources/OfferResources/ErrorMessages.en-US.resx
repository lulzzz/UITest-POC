<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckWithAuditor" xml:space="preserve">
    <value>Please contact with auditor</value>
  </data>
  <data name="CommitteeNameExist" xml:space="preserve">
    <value>Committee name not exists</value>
  </data>
  <data name="CommitteeNotFound" xml:space="preserve">
    <value>Committee not exists</value>
  </data>
  <data name="EmailExist" xml:space="preserve">
    <value>Email already exists</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Please enter email</value>
  </data>
  <data name="EnterPhone" xml:space="preserve">
    <value>Please enter phone</value>
  </data>
  <data name="ModelDataError" xml:space="preserve">
    <value>Please review data and try again</value>
  </data>
  <data name="TenderSentFailed" xml:space="preserve">
    <value>An error occured while sending.</value>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>Unexprected error, Please try again later</value>
  </data>
  <data name="EnterQuantitiesTable" xml:space="preserve">
    <value>Please enter at least one quantity table</value>
  </data>
  <data name="EnterQuantitiesTableItem" xml:space="preserve">
    <value>Please enter at least one item in the quantity table</value>
  </data>
  <data name="TenderNotExist" xml:space="preserve">
    <value>Tender do not exists</value>
  </data>
  <data name="DateLessThanToday" xml:space="preserve">
    <value>Date should be more than today</value>
  </data>
  <data name="SendOfferFilesConfirm" xml:space="preserve">
    <value>Are you sure you want to send these files as tender offer?</value>
  </data>
  <data name="EnterTableName" xml:space="preserve">
    <value>Please enter table name</value>
  </data>
  <data name="AtLeastOneClassification" xml:space="preserve">
    <value>Please enter at least one classification</value>
  </data>
  <data name="AtLeastOneGuarantee" xml:space="preserve">
    <value>Please enter at least one bank guarantee</value>
  </data>
  <data name="EnterBankGuaranteeValue" xml:space="preserve">
    <value>Please enter bank guarantee value</value>
  </data>
  <data name="EnterGuaranteeNumber" xml:space="preserve">
    <value>please enter bank guarantee number</value>
  </data>
  <data name="SelectTechnicalEvaluation" xml:space="preserve">
    <value>Please select technical evaluation</value>
  </data>
  <data name="StartDateGreaterThanEndDate" xml:space="preserve">
    <value>Please select bank</value>
  </data>
  <data name="OfferNotExist" xml:space="preserve">
    <value>Offer is not exist</value>
  </data>
  <data name="OfferNotEstablishedForOffer" xml:space="preserve">
    <value>So you can not send offer status must be established as first step.</value>
  </data>
  <data name="CanNotUpdateDeletedOfferTable" xml:space="preserve">
    <value>so you can not update QuantityTableItem, that is deactivated offer (deleted) offer</value>
  </data>
  <data name="EstablishOfferToUpdateTable" xml:space="preserve">
    <value>so you can not update QuantityTableItem, the offer must be established as first step.</value>
  </data>
  <data name="NotActiveDeleted" xml:space="preserve">
    <value>not active (deleted)</value>
  </data>
  <data name="OfferForTable" xml:space="preserve">
    <value>offer of this quantityTableItem is:</value>
  </data>
  <data name="ApplyOfferDataIssue" xml:space="preserve">
    <value>Please enter all items prices before saving</value>
  </data>
  <data name="EnterFile" xml:space="preserve">
    <value>Please Select File</value>
  </data>
  <data name="ApplyOfferAttachmentsDataIssue" xml:space="preserve">
    <value>You have to attach at least one file before save</value>
  </data>
  <data name="OfferStatusOrTechnicalEvaluationNotExist" xml:space="preserve">
    <value>Offer Status Or Technical Evaluation Not Exist</value>
  </data>
  <data name="OfferNotRecievedForOffer" xml:space="preserve">
    <value>Offer can not be updated because it is not received</value>
  </data>
  <data name="SelectBank" xml:space="preserve">
    <value>Select Bank</value>
  </data>
  <data name="SelectOfferStatus" xml:space="preserve">
    <value>Please Select Offer Status</value>
  </data>
  <data name="MinimumValueIsZero" xml:space="preserve">
    <value>Discount should be at least Zero</value>
  </data>
  <data name="DiscountAmountLargerThanPrice" xml:space="preserve">
    <value>Discount amount should be lower than price</value>
  </data>
  <data name="EnterPrice" xml:space="preserve">
    <value>Please Enter Price</value>
  </data>
  <data name="OfferLetterDateMustHaveAValue" xml:space="preserve">
    <value>Offer Letter Date Must Have Value</value>
  </data>
  <data name="OfferLetterNumberMustHaveAValue" xml:space="preserve">
    <value>Offer Letter Number Must Have Value</value>
  </data>
  <data name="OfferTechnicalCheckMustBeIdentical" xml:space="preserve">
    <value>Offer Must Be Technically Identical</value>
  </data>
  <data name="BiddingValueMustBeGreaterThanZero" xml:space="preserve">
    <value>Bidding Value Must Be Greater Than Zero</value>
  </data>
  <data name="BiddingValueMustBeLessThanLastBidding" xml:space="preserve">
    <value>Bidding Value Must Be Less Than Last Bidding</value>
  </data>
  <data name="EnterFinancialWeight" xml:space="preserve">
    <value>Please enter the financial weight.</value>
  </data>
  <data name="FinancialWeight" xml:space="preserve">
    <value>Financial weight</value>
  </data>
  <data name="EnterFinancialWeight1" xml:space="preserve">
    <value>يجب إدخال حقل درجة التقييم الفني</value>
  </data>
  <data name="EnterTechnicalWeight" xml:space="preserve">
    <value>Enter technical weight</value>
  </data>
  <data name="EnterNotes" xml:space="preserve">
    <value>Please enter notes field</value>
  </data>
  <data name="TarsiaReportFile" xml:space="preserve">
    <value>If there is uploaded awarding report it will be replaced with the new file</value>
  </data>
</root>