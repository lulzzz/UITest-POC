<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActiveAnnouncements" xml:space="preserve">
    <value>Active Announcements</value>
  </data>
  <data name="ActivityDescription" xml:space="preserve">
    <value>Activity Description</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AgencyName" xml:space="preserve">
    <value>Agency Name</value>
  </data>
  <data name="AllAnnouncement" xml:space="preserve">
    <value>All Announcement</value>
  </data>
  <data name="AnnouncementDetails" xml:space="preserve">
    <value>Announcement Details</value>
  </data>
  <data name="AnnouncementDuration" xml:space="preserve">
    <value>Announcement Duration</value>
  </data>
  <data name="AnnouncementName" xml:space="preserve">
    <value>Announcement Name</value>
  </data>
  <data name="AnnouncementPeriod" xml:space="preserve">
    <value>Announcement Period</value>
  </data>
  <data name="AnnouncementPublishDate" xml:space="preserve">
    <value>Announcement Publish Date</value>
  </data>
  <data name="AnnouncementResult" xml:space="preserve">
    <value>Announcement Results</value>
  </data>
  <data name="Announcements" xml:space="preserve">
    <value>Announcements</value>
  </data>
  <data name="AnnouncementStatus" xml:space="preserve">
    <value>Announcement Status</value>
  </data>
  <data name="AnnouncementSupplierTemplateName" xml:space="preserve">
    <value>ListSupplierTemplateName</value>
  </data>
  <data name="AnnouncementTemplateDetails" xml:space="preserve">
    <value>تفاصيل القائمة</value>
  </data>
  <data name="AnnouncementTemplateSuppliersListType" xml:space="preserve">
    <value>AnnouncementTemplateSuppliersListType</value>
  </data>
  <data name="AnnouncementType" xml:space="preserve">
    <value>Announcement Type</value>
  </data>
  <data name="ApprovedByText" xml:space="preserve">
    <value>Approved By Text</value>
  </data>
  <data name="Areas" xml:space="preserve">
    <value>Areas</value>
  </data>
  <data name="AuditedBy" xml:space="preserve">
    <value>Approved By</value>
  </data>
  <data name="BranchName" xml:space="preserve">
    <value>Branch Name</value>
  </data>
  <data name="CategoryField" xml:space="preserve">
    <value>Category Field</value>
  </data>
  <data name="CommercialRegistrationNumber" xml:space="preserve">
    <value>Commercial Registration Number</value>
  </data>
  <data name="ConstructionWorks" xml:space="preserve">
    <value>Construction Works</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="CreateAnnouncement" xml:space="preserve">
    <value>Create/Edit Announcement</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CreatedByText" xml:space="preserve">
    <value>Created By Text</value>
  </data>
  <data name="CreationDetails" xml:space="preserve">
    <value>Creation Details</value>
  </data>
  <data name="DateLocation" xml:space="preserve">
    <value>Date and Location</value>
  </data>
  <data name="Dates" xml:space="preserve">
    <value>Dates</value>
  </data>
  <data name="Descriptions" xml:space="preserve">
    <value>Descriptions</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="ExecutionLocation" xml:space="preserve">
    <value>Execution Location</value>
  </data>
  <data name="GeneralList" xml:space="preserve">
    <value>generalList</value>
  </data>
  <data name="GovAgencyInfo" xml:space="preserve">
    <value>GovAgencyInfo</value>
  </data>
  <data name="InactiveAnnounements" xml:space="preserve">
    <value>Inactive Announements</value>
  </data>
  <data name="InsideKSA" xml:space="preserve">
    <value>Execution Location</value>
  </data>
  <data name="IntroAboutAnnouncementTemplate" xml:space="preserve">
    <value>IntroAboutAnnouncementTemplate</value>
  </data>
  <data name="IntroAboutTender" xml:space="preserve">
    <value>Introduction about tender</value>
  </data>
  <data name="IsEffectiveList" xml:space="preserve">
    <value>IsEffectiveList</value>
  </data>
  <data name="IsRequiredAttachmentToJoinList" xml:space="preserve">
    <value>IsRequiredAttachmentToJoinList</value>
  </data>
  <data name="JoinRequestsCount" xml:space="preserve">
    <value>Join Requests Count</value>
  </data>
  <data name="JoinRequestsList" xml:space="preserve">
    <value>Join Requests List</value>
  </data>
  <data name="LastJoinDate" xml:space="preserve">
    <value>Last Date to join tender</value>
  </data>
  <data name="MaintenanceOperationActions" xml:space="preserve">
    <value>Maintenance Operation Actions</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="OnlyActiveAnnouncements" xml:space="preserve">
    <value>Active Announcements</value>
  </data>
  <data name="OnlyEndedAnnouncements" xml:space="preserve">
    <value>Ended Announcements</value>
  </data>
  <data name="PrivateList" xml:space="preserve">
    <value>PrivateList</value>
  </data>
  <data name="PurchaseMethodBasedOnAnnouncement" xml:space="preserve">
    <value>أسلوب الشراء بناء على نتائج الاعلان</value>
  </data>
  <data name="ReferenceNumber" xml:space="preserve">
    <value>Reference Number</value>
  </data>
  <data name="RelationStep" xml:space="preserve">
    <value>Categoty field and activites</value>
  </data>
  <data name="RequiredAttachment" xml:space="preserve">
    <value>RequiredAttachment</value>
  </data>
  <data name="RequirementConditionsToJoinList" xml:space="preserve">
    <value>RequirementConditionsToJoinList</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SupportingDocuments" xml:space="preserve">
    <value>الملفات الداعمة</value>
  </data>
  <data name="TemplateExtendMechanism" xml:space="preserve">
    <value>TemplateExtendMechanism</value>
  </data>
  <data name="TenderActivities" xml:space="preserve">
    <value>Tender Activities</value>
  </data>
  <data name="TenderActivity" xml:space="preserve">
    <value>Tender Activity</value>
  </data>
  <data name="TenderTypeName" xml:space="preserve">
    <value>Tender Type Name</value>
  </data>
  <data name="UnderOperationAnnouncements" xml:space="preserve">
    <value>Under Operation Announcements</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>yes</value>
  </data>
</root>