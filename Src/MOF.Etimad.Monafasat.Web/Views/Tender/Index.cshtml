@using MOF.Etimad.Monafasat.SharedKernel;
@{
   ViewBag.Title = MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.Tenders;
}
@section breadcrumb
   {
   <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
         <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.BreadCrumb_Home</a></li>
         <li class="breadcrumb-item active" aria-current="page">@MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.Tenders</li>
      </ol>
   </nav>
}
@section pagecontrols{
   <div class="dropdown">
      <button type="button" id="toglGrid" onclick="toggleViewGrid('TenderGrid')" class="btn p-2 btn-outline-primary pull-left" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.ViewAsMenu">
         <i class="material-icons">view_column</i> @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.ViewAsMenu
      </button>
      <button type="button" id="toglCards" onclick="toggleViewCards('TenderGrid')" class="btn p-2 btn-outline-primary pull-left" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.ViewAsCards">
         <i class="material-icons">view_quilt</i> 
         @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.ViewAsCards
      </button>
      <span class="d-block pull-left" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.Search" onclick="Tender.fillDropDownData()">
         <button id="searchBtnColaps" class="btn p-2 btn-outline-primary" data-toggle="collapse" href="#Search" role="button" aria-expanded="false" aria-controls="Search">
            <i class="material-icons">search</i> @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.Search
         </button>
      </span>
   </div>
}
<form class="form" id="frmSearch">
   <input type="hidden" id="hdnLastEnquiryDate" />
   <input type="hidden" id="hdnTenderIdString" />
   <input type="hidden" id="hdnCreationDate" />
   <div id="TenderGrid" class="etd-cards" v-cloak>
      <div class="modal fade" id="ResendInvitationsModal" tabindex="-1" role="dialog">
         <div class="modal-dialog" role="document">
            <div class="modal-content">
               <div class="modal-header">
                  <h5 class="modal-title">
                     تأكيد إعادة الإرسال
                  </h5>
                  <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                     <i class="material-icons">clear</i> 
                  </button>
               </div>
               <div class="modal-body">
                  <p>
                     هل أنت متأكد من إعادة إرسال الدعوات مرة أخرى ؟
                     <input type="hidden" name="hiddenValue" id="hiddenValue" value="" />
                  </p>
               </div>
               <div class="modal-footer">
                  <button type="button" class="btn btn-link btn-success" id="SaveModel" @@click="confirmResendInvitations">@MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.Confirm</button>
                  <button type="button" class="btn btn-danger btn-link" data-dismiss="modal">  @MOF.Etimad.Monafasat.Resources.BlockResources.DisplayInputs.Cancel</button>
               </div>
            </div>
         </div>
      </div>
      <div class="modal fade" id="showToPublicModal" tabindex="-1" role="dialog">
         <div class="modal-dialog" role="document">
            <div class="modal-content">
               <div class="modal-header">
                  <h5 class="modal-title">@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.Confirm</h5>
                  <button type="button" class="close pull-right" data-dismiss="modal" aria-label="Close">
                     <i class="material-icons">clear</i> 
                  </button>
               </div>
               <div class="modal-body">
                  <p> @MOF.Etimad.Monafasat.Resources.TenderResources.Messages.ShowToPublicConfirm</p>
               </div>
               <div class="modal-footer">
                  <button type="button" id="convertInvitationToPublicConfirmation" @@click="convertInvitationToPublicConfirmation()" class="btn btn-success btn-sm">@MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.Confirm</button>
                  <button type="button" class="btn btn-danger btn-link" data-dismiss="modal">@MOF.Etimad.Monafasat.Resources.OfferResources.DisplayInputs.Cancel</button>
               </div>
            </div>
         </div>
      </div>
      @await Html.PartialAsync("_TenderMovementModal")
      <div class="clearfix"></div>
      <div class="row tendar-navigation position-relative" style="min-height:0px;">
         <ul class="nav nav-pills nav-pills-teal col-md-8 col-sm-12 col-xs-12">
            <li class="nav-item active" @@click="getAllTenders()"><a class="nav-link active" href="#pill1" data-toggle="tab"><i class="material-icons pull-left" style="padding:0 3px">layers</i> @MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.AllTenders</a></li>
            <li class="nav-item" @@click="getCurrentTenders()"><a class="nav-link" href="#pill1" data-toggle="tab"><i class="material-icons pull-left" style="padding:0 3px">layers</i> @MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.ActiveTenders</a></li>
            <li class="nav-item" @@click="getFinishedTenders()"><a class="nav-link" href="#pill1" data-toggle="tab"><i class="material-icons pull-left" style="padding:0 3px">layers</i> @MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.EndedTenders</a></li>
         </ul>
         <div class="col-md-4 col-sm-12 col-xs-12">
            @if ((User.IsInRole(RoleNames.DataEntry) || User.IsInRole(RoleNames.PurshaseSpecialist)) && User.UserBranch() != 0)
            {
               <a class="btn btn-lg btn-primary pull-right m-0  d-sm-block d-none" asp-action="BasicTenderData" asp-controller="Tender" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="@MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.AddTender">
                  <i class="material-icons">add</i> @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.AddMonafasa
               </a>
               <a class="btn btn-lg btn-primary pull-right text-center m-1 btn-block d-sm-none d-inline-block" asp-action="BasicTenderData" asp-controller="Tender" data-toggle="tooltip" data-placement="top" title="" data-container="body" data-original-title="@MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.AddTender">
                  <i class="material-icons">add</i> @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.AddMonafasa
               </a>
            }
         </div>
         <div class="etd-sorting-cont">
            @await Html.PartialAsync("~/Views/Tender/Partials/_TendersGridSorts.cshtml")
         </div>
      </div>
      <div class="row" style="position:relative">
         <div class="collapse col-lg-4 col-md-4 col-sm-12 col-xs-12" id="Search">
            @await Html.PartialAsync("~/Views/Tender/Search/_IndexSearchForm.cshtml")
         </div>
         <div class="animated  delay-2s col-md-12 col-sm-12 col-xs-12" id="cardsresult">
            <div class="row" v-if="Tenders && Tenders.length > 0">
               <div class="monafasa-item col-xl-4 col-lg-6 col-md-6 col-sm-12 col-xs-12" v-for="(tender, $index) in Tenders">
                  @await Html.PartialAsync("~/Views/Tender/_TenderCardContentForIndex.cshtml")
               </div>
            </div>
            <div class="col-12" v-else>
               @await Html.PartialAsync("~/Views/Shared/_NoData.cshtml")
            </div>
         </div>
         <div class="tableDiv col-md-12 col-sm-12 col-xs-12 animated  delay-2s" id="gridresult">
            <div class="card">
               @await Html.PartialAsync("_TenderGrid")
            </div>
         </div>
         <div class="col-12 m-5 m-auto">
            <pagination :visible_pages="3" ref="vpaginator" :resource_url="resource_url" @@update="updateResource"></pagination>
         </div>
      </div>
   </div>
   <div class="clearfix"></div>
</form>
@section scripts{
   <script>
      $(document).ready(function () {
         $('li#menuAllTenders a').addClass('active');
      });
      $(function () {
         $("input").keypress(function (event) {
            if (event.which == 13) {
               event.preventDefault();
               $("#searchBtn").click();
            }
         });
         toggleViewGrid('TenderGrid');
         $('#searchBtnColaps').click(function () {
            if (!Tender.isAjaxMethodsCalled) {
               Tender.fillDropDownData();
            }
            var _grid = $('#gridresult');
            var _cards = $('#cardsresult');
            if (_cards.hasClass('col-md-12')) {
               _cards.removeClass('col-md-12');
               _cards.addClass('col-md-8');
               _grid.removeClass('col-md-12');
               _grid.addClass('col-md-8');
               _cards.find('.monafasa-item').removeClass('col-md-6');
               _cards.find('.monafasa-item').addClass('col-md-12');
               _cards.find('.monafasa-item').removeClass('col-lg-6');
               _cards.find('.monafasa-item').addClass('col-lg-12');
               _cards.find('.monafasa-item').removeClass('col-xl-4');
               _cards.find('.monafasa-item').addClass('col-xl-6');
            } else if (_cards.hasClass('col-md-8')) {
               _cards.addClass('col-md-12');
               _cards.removeClass('col-md-8 ');
               _grid.addClass('col-md-12');
               _grid.removeClass('col-md-8');
               _cards.find('.monafasa-item').addClass('col-md-6');
               _cards.find('.monafasa-item').removeClass('col-md-12');
               _cards.find('.monafasa-item').addClass('col-lg-6');
               _cards.find('.monafasa-item').removeClass('col-lg-12');
               _cards.find('.monafasa-item').addClass('col-xl-4');
               _cards.find('.monafasa-item').removeClass('col-xl-6');
            }
            $('#closeSearch').on("click", function () {
               $('#searchBtnColaps').click()
            });
         });
      });
      var Tender = new Vue({
         el: '#TenderGrid',
         data: {
            Tenders: [],
            tenderStatusList: [],
            areasList: [],
            selectedAgency: '',
            selectedBranch: '',
            agencyList: [],
            branchesList: [],
            selectedCreatedByUser: '',
            createdByList: [],
            selectedApprovedByUser: '',
            approvedByList: [],
            financialYearList: [],
            selectedStatus: '',
            selectedFinancialYear: '',
            selectedAreaList: [], selectedTypeList: [], typeList: [],
            selectedTypeId: 0,
            totalCount: 0,
            currentPage: 1,
            tenderNumber: '',
            TenderMovements: [],
            pageSize: @((int)Enums.PageSize.Six),
            resource_url: '/Tender/IndexPagingAsync?pageSize=' +@((int)Enums.PageSize.Six),
            resource_url_tenderMovement: '',
            dataEntry: '@RoleNames.DataEntry',
            auditor: '@RoleNames.Auditer',
            purshaseSpecialist: '@RoleNames.PurshaseSpecialist',
            etimadOfficer: '@RoleNames.EtimadOfficer',
            vroSecretry: '@(RoleNames.OffersOpeningAndCheckSecretary)',
            checkManger: '@(RoleNames.OffersOpeningAndCheckManager)',
            currentRole: '@User.IsInRole(RoleNames.OffersOpeningAndCheckSecretary)' == "True" ? this.vroSecretry : this.checkManger,
            queryString: "",
            sort: "CreatedAt",
            sortDirection: "DESC",
            type: "All",
            isAjaxMethodsCalled: false
         },
         created: function () {
            if (window.location.href.split('?')[1] && window.location.href.split('?')[1] != '')
               this.resource_url = decodeURI(decodeURI(this.resource_url + "?" + window.location.href.split('?')[1]));
            this.getUrlVars();
         },
         methods: {
            getUrlVars: function () {
               $(document).ready(function () {
                  var vars = [], hash;
                  var hashes = decodeURI(decodeURI(window.location.href.slice(window.location.href.indexOf('?') + 1).split('&')));
                  if (hashes) {
                     var url_string = decodeURI(window.location.href)
                     var url = new URL(url_string);
                     if (url.searchParams.get('PageSize') != null) {
                        $('#itemsPerPage').val(url.searchParams.get('PageSize'))
                     }
                     hashes = hashes.split(',');
                     for (var i = 0; i < hashes.length; i++) {
                        hash = hashes[i].split('=');
                        vars[hash[0]] = hash[1];
                        if (url.searchParams.get(hash[0])) {
                           var Tag = $('#Search [data-search=' + hash[0] + ']')[0];
                           if (Tag) {
                              var tagName = $('#Search [data-search=' + hash[0] + ']')[0].tagName;
                              if (tagName == 'SELECT') {
                              }
                              else {
                                 $('#Search  [ data-search=' + hash[0] + ']').val(url.searchParams.get(hash[0]))
                              }
                           }
                        }
                     }
                     $('#Search #TenderTypeId').val(url.searchParams.get('TenderTypeId'))
                     $('#Search #TenderTypeId').selectpicker('refresh');
                  }
               })
            },
            getAllTenders: function () {
               this.type = "All";
               this.search();
            },
            getCurrentTenders: function () {
               this.type = "Current";
               this.search();
            },
            getFinishedTenders: function () {
               this.type = "Finished";
               this.search();
            },
            percentageLeft: function (pubDate, lastDate, remainingDays, remainingHours) {
               return calculateCardPercentage(pubDate, lastDate, remainingDays, remainingHours);
            },
            getDate: function (datetime) {
               let date = new Date(datetime);
               let dateString = date.getFullYear() + '/' + (date.getMonth() + 1) + '/' + date.getDate() + ' - ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();
               return dateString
            },
            updateResource: function (data) {
               this.Tenders = data;
               this.totalCount = this.$refs.vpaginator.totalCount;
               this.currentPage = this.$refs.vpaginator.currentPage;
               this.pageSize = this.$refs.vpaginator.pageSize;
               toggleViewOnLoad();
               $('[data-toggle="tooltip"]').tooltip();
               if (isCard)
                  setTimeout(function () {
                     updateAgencyLogos();
                  }, 1000);
            },
            detailsUrl: function (id) {
               return '/Tender/Details?STenderId=' + id;
            },
            changeRequestDetailsUrl: function (id, changeRequestTypeId) {
               if (changeRequestTypeId == '@((int)Enums.ChangeRequestType.ExtendDates)') {
                  return '/Tender/Details?STenderId=' + id + '#d-2';
               }
               else if (changeRequestTypeId == '@((int)Enums.ChangeRequestType.QuantitiesTables)') {
                  return '/Tender/Details?STenderId=' + id + '#d-4';
               }
               else if (changeRequestTypeId == '@((int)Enums.ChangeRequestType.Attachments)') {
                  return '/Tender/Details?STenderId=' + id + '#d-5';
               }
               else {
                  return '/Tender/Details?STenderId=' + id;
               }
            },
            ExtendDateApproval: function (id) {
               return '/Tender/TenderExtendDateApprovement?tenderIdString=' + id;
            },
            QuantityTableApproval: function (id) {
               return '/Tender/TenderQuantityTableChangesApprovement?tenderIdString=' + id;
            },
            AttachmentsApproval: function (id) {
               return '/Tender/TenderAttachmentsChangesApprovement?tenderIdString=' + id;
            },
            FillMovments: function (tenderId, tenderNumber) {
               Tender.tenderNumber = tenderNumber;
               Tender.resource_url_tenderMovement = '/Tender/GetTenderMovementsByTenderId?TenderId=' + tenderId;
            },
            CreateSecondStage: function (tenderId) {
               return '/Tender/BasicSecondStageData/' + tenderId;
            },
            EditeSecondStage: function (tenderId) {
               return '/Tender/BasicSecondStageData/' + tenderId;
            },
            updateResourceMovement: function (data) {
               this.TenderMovements = data;
               this.totalCount = this.$refs.vpaginator.totalCount;
               this.currentPage = this.$refs.vpaginator.currentPage;
               this.pageSize =  @((int)Enums.PageSize.Six);
            },
            notificationStatusReport: function (_tender) {
               window.location.href = "/Tender/notificationStatusReport?tenderId=" + _tender.tenderIdString + "&tenderName=" + _tender.tenderName;
            },
            editUrl: function (tenderId) {
               return '/Tender/BasicTenderData/' + tenderId;
            },
            remove: function (TenderIdString) {
               $.get('/Tender/Delete?TenderIdString=' + TenderIdString).done(function () {
                  window.location = '/Tender/Index/';
               });
            },
            ReCreateAgreement: function (tenderId) {
               return '/Tender/BasicTenderData/' + tenderId;
            },
            joiningRequest: function (tenderId) {
               return '/Tender/SuppliersJoiningRequest?tenderIdString=' + tenderId;
            },
            invitationUrl: function (tenderId) {
               return '/Tender/SendTenderInvitations?tenderIdString=' + tenderId;
            },
            confirmResendInvitations: function () {
               $('#ResendInvitationsModal').modal('hide');
               var tenderId = $("#hiddenValue").val();
               $(".modal-body #hiddenValue").val("");
               var token = $('input[name=__RequestVerificationToken]').val();
               $.ajax({
                  type: "POST",
                  url: '@Url.Action("GetAllInvitedSuppliersAndSendInvitationAgain", "Tender")',
                  data: { invitationTenderIdString: tenderId, __RequestVerificationToken: token },
                  success: function (data) {
                     if (data.status.trim() == "success") {
                        AlertFun(data.message, alertMessageType.Success)
                     } else {
                        AlertFun(data.message, alertMessageType.Danger);
                     }
                  },
                  error: function () {
                     $('#LoadingSite').fadeOut();
                     AlertFun('@Html.Raw(MOF.Etimad.Monafasat.Resources.TenderResources.ErrorMessages.ExpiredActivationCode)', alertMessageType.Danger);
                  }
               });
            },
            showDialog: function (id) {
               if (typeof (id) !== "undefined" && id !== "") {
                  $("#ResendInvitationsModal #hiddenValue").val(id);
                  $("#ResendInvitationsModal").modal("show");
               }
            },
            openCountAndCloseOffersReports: function (tenderId) {
               return '/Tender/CountAndCloseAppliedOffers?tenderIdString=' + tenderId;
            },
            UpdateCommittees: function (tenderId) {
               return '/Tender/EditCommittees?id=' + tenderId;
            },
            cancelLink: function (STenderId) {
               return '/Tender/CancelTender?STenderId=' + STenderId;
            },
            UpdateAttachments: function (tenderId) {
               return '/Tender/TenderAttachmentsUpdates?id=' + tenderId;
            },
            UpdateDate: function (tenderId) {
               return '/Tender/ExtendTenderDates?tenderIdString=' + tenderId;
            },
            UpdateQuantitiesTables: function (tenderId) {
               return '/Tender/TenderQuantitiesTableUpdates?id=' + tenderId;
            },
            UpdateAreas: function (tenderId) {
               return '/Tender/EditAreas?id=' + tenderId;
            },
            convertInvitationToPublic: function (tenderId) {
               $('#showToPublicModal').modal("show");
               $('#hdnTenderIdString').val(tenderId);
            },
            convertInvitationToPublicConfirmation: function () {
               var token = $('input[name=__RequestVerificationToken]').val();
               $('#LoadingSite').fadeIn();
               $.post('/Tender/ConvertTenderInvitationToPublic', { tenderIdString: $('#hdnTenderIdString').val(), __RequestVerificationToken: token }).done(function (result) {
                  Tender.$refs.vpaginator.fetchData(Tender.resource_url);
                  $('#LoadingSite').fadeOut();
                  $('#showToPublicModal').modal("hide");
                  AlertFun('@Html.Raw(MOF.Etimad.Monafasat.Resources.TenderResources.Messages.PublishTenderToGeneral)', alertMessageType.Success);
               }).fail(function (error) {
                  $('#LoadingSite').fadeOut();
                  $('#showToPublicModal').modal("hide");
                  AlertFun('@Html.Raw(MOF.Etimad.Monafasat.Resources.TenderResources.Messages.ErrorMessage)', alertMessageType.Danger);
               });
            },
            UpdateSamplesDeliveryAddress: function (tenderId) {
               return '/Tender/EditSamplesDeliveryAddress?id=' + tenderId;
            },
            openAwardOffersReport: function (tenderId) {
               return '/Tender/AwardingReport?tenderIdString=' + tenderId;
            },
            suppliersReport: function (tenderId) {
               return '/Offer/SuppliersReport?tenderIdString=' + tenderId;
            },
            financialSupervisorSuppliersReport: function (id) {
               return '/Offer/OffersReport?tenderIdString=' + tenderId;
            },
            SortBySubmissionDate: function () {
               if (this.sort = "CreatedAt") {
                  if (this.sortDirection == "DESC")
                     this.sortDirection = "ASC";
                  else
                     this.sortDirection = "DESC"
               }
               else {
                  this.sort = "CreatedAt";
                  this.sortDirection = "ASC";
               }
               this.search();
            },
            SortByOfferOpeningDate: function () {
               if (this.sort = "OffersOpeningDate") {
                  if (this.sortDirection == "DESC")
                     this.sortDirection = "ASC";
                  else
                     this.sortDirection = "DESC"
               }
               else {
                  this.sort = "OffersOpeningDate";
                  this.sortDirection = "ASC";
               }
               this.search();
            },
            getTendersBySelectedPageSize: function () {
               this.pageSize = $('#itemsPerPage').val();
               this.search();
            },
            search: function () {
               this.queryString = $('form#frmSearch').serialize();
               var searchCriteria = '&AgencyCode=' + this.selectedAgency + '&BranchId=' + this.selectedBranch + '&TenderTypeId=' + this.selectedTypeList + '&CreatedBy=' + this.selectedCreatedByUser + '&ApprovedBy=' + this.selectedApprovedByUser + '&FinancialYear=' + this.selectedFinancialYear + '&TenderAreasIdString=' + this.selectedAreaList + '&IsVro=' + "@User.UserIsVRO()"
                  + '&SubmitionDate=' + $("#createdAt").val() + '&LastEnqueriesDate=' + $("#lastEnqueriesDate").val() + '&Sort=' + this.sort + '&SortDirection=' + this.sortDirection + '&PageSize=' + this.pageSize;
               if (this.type == "All") {
                  this.queryString = this.queryString + searchCriteria + '&TenderStatusId=' + this.selectedStatus;
               }
               else if (this.type == "Current") {
                  this.queryString = this.queryString + searchCriteria + '&NotInStatusId=' + '@((int)Enums.TenderStatus.OffersAwardedConfirmed)';
               }
               else if (this.type == "Finished") {
                  this.queryString = this.queryString + searchCriteria + '&TenderStatusId=@((int)Enums.TenderStatus.OffersAwardedConfirmed)';
               }
               this.resource_url = '/Tender/IndexPagingAsync' + '?' + this.queryString;
               this.addToURL();
            },
            addToURL: function () {
               var _encodedurl = encodeURI(((this.resource_url.split('?')[1]) ? "?" + (this.resource_url.split('?')[1]) : ''));
               var _requestToken = '&__RequestVerificationToken=' + $('input[name=__RequestVerificationToken]').val();
               _encodedurl = _encodedurl.replace(_requestToken, '')
               window.history.pushState({ urlPath: "" }, "Search Results", "/Tender/Index" + _encodedurl);
            },
            clear: function (event) {
               var checkboxDates = $('#frmSearch .checkbox_appended input:checkbox');
               checkboxDates.each(function () {
                  var chk = this;
                  var isChecked = $(chk).is(':checked')
                  if (isChecked) {
                     $(chk).trigger('change');
                  }
               });
               $("#TenderTypeId, #FinancialYear, #TenderStatusId, #TenderAreasIdString, #AgencyCode , #branchId , #CreatedBy, #ApprovedBy").val('');
               $("#TenderTypeId, #FinancialYear, #TenderStatusId, #TenderAreasIdString, #AgencyCode , #branchId, #CreatedBy, #ApprovedBy").selectpicker("refresh");
               this.selectedCreatedByUser = '';
               this.selectedApprovedByUser = '';
               this.selectedAgency = '';
               this.selectedBranch = '';
               this.selectedStatus = '';
               this.selectedFinancialYear = '';
               this.selectedAreaList = [];
               this.selectedTypeList = '';
               $("#TenderTypeId").val("");
               $("#TenderName").val("");
               $("#TenderNumber").val("");
               $("#ReferenceNumber").val("");
               $("#ConditionsBookletPrice").val("");
               $("#createdAt").val("");
               $("#hdnCreationDate").val("");
               $("#hdnLastEnquiryDate").val("");
               $("#lastEnqueriesDate").val("");
               this.queryString = "";
               this.queryString = $('form#frmSearch').serialize();
               var searchCriteria = '&AgencyCode=' + this.selectedAgency + '&BranchId=' + this.selectedBranch + '&TenderTypeId=' + this.selectedTypeList + '&CreatedBy=' + this.selectedCreatedByUser + '&ApprovedBy=' + this.selectedApprovedByUser + '&FinancialYear=' + this.selectedFinancialYear + '&TenderAreasIdString=' + this.selectedAreaList + '&IsVro=' + "@User.UserIsVRO()"
                  + '&SubmitionDate=' + $("#createdAt").val() + '&LastEnqueriesDate=' + $("#lastEnqueriesDate").val() + '&Sort=' + this.sort + '&SortDirection=' + this.sortDirection + '&PageSize=' + this.pageSize;
               if (this.type == "All") {
                  this.queryString = this.queryString + searchCriteria + '&TenderStatusId=' + this.selectedStatus;
               }
               else if (this.type == "Current") {
                  this.queryString = this.queryString + searchCriteria + '&NotInStatusId=' + '@((int)Enums.TenderStatus.OffersAwardedConfirmed)';
               }
               else if (this.type == "Finished") {
                  this.queryString = this.queryString + searchCriteria + '&TenderStatusId=@((int)Enums.TenderStatus.OffersAwardedConfirmed)';
               }
               this.resource_url = '/Tender/IndexPagingAsync' + '?' + this.queryString;
               this.addToURL();
            },
            check: function (s, a) {
               if (s == a)
                  return true;
               else
                  return false;
            },
            fillDropDownData: function () {
               if (Tender.isAjaxMethodsCalled) {
                  return false;
               }
               this.isAjaxMethodsCalled = true;
               var url_string = decodeURI(window.location.href)
               var url = new URL(url_string);
               $.get('/Tender/GetStatusAsync').done(function (result) {
                  console.log(result);
                  Tender.tenderStatusList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('TenderStatusId')) {
                        $('#TenderStatusId').selectpicker('val', url.searchParams.get('TenderStatusId'));
                     }
                     $('#TenderStatusId').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetAreasAsync').done(function (result) {
                  Tender.areasList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('TenderAreasIdString')) {
                        $('#TenderAreasIdString').selectpicker('val', url.searchParams.get('TenderAreasIdString'));
                     }
                     $('#TenderAreasIdString').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Qualification/GetTenderTypes').done(function (result) {
                  Tender.typeList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('TenderTypeId')) {
                        $('#TenderTypeId').selectpicker('val', url.searchParams.get('TenderTypeId'));
                     }
                     $('#TenderTypeId').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetFinancialYear', null, function (result) {
                  Tender.financialYearList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('FinancialYear')) {
                        $('#FinancialYear').selectpicker('val', url.searchParams.get('FinancialYear'));
                     }
                     $('#FinancialYear').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetAllDataEntryUsersAsync', null, function (result) {
                  Tender.createdByList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('CreatedBy')) {
                        $('#CreatedBy').selectpicker('val', url.searchParams.get('CreatedBy'));
                     }
                     $('#CreatedBy').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetAllAuditorUsersAsync', null, function (result) {
                  Tender.approvedByList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('ApprovedBy')) {
                        $('#ApprovedBy').selectpicker('val', url.searchParams.get('ApprovedBy'));
                     }
                     $('#ApprovedBy').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetAllAgenciesAsync').done(function (result) {
                  Tender.agencyList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('AgencyCode')) {
                        $('#AgencyCode').selectpicker('val', url.searchParams.get('AgencyCode'));
                     }
                     $('#AgencyCode').selectpicker('refresh');
                  }, 1000);
               });
               $.get('/Tender/GetAllBranchesByAgencyCode').done(function (result) {
                  Tender.branchesList = result;
                  setTimeout(function () {
                     if (url.searchParams.get('BranchId')) {
                        $('#branchId').selectpicker('val', url.searchParams.get('BranchId'));
                     }
                     $('#branchId').selectpicker('refresh');
                  }, 1000);
               });
            }
         },
         updated: function () {
            toggleViewOnLoad();
            $('.popover-status').each(function () {
               var content = $(this).find('.popover-content').html();
               $(this).attr('data-content', content);
            });
            $(function () {
               $('[data-toggle="popover"]').popover({
                  trigger: 'hover',
                  html: true
               })
            })
            $('[data-toggle="tooltip"]').tooltip();
         }
      });
   </script>
}
