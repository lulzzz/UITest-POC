@{
   var isUnitUser = User.IsInRole(RoleNames.UnitManagerUser) || User.IsInRole(RoleNames.UnitSpecialistLevel2) || User.IsInRole(RoleNames.UnitSpecialistLevel1);
}
<template v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.UnderEstablishing) || tender.tenderStatusId == @((int)Enums.TenderStatus.Established)">
   <span v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.Established)" class="badge badge-warning d-inline-block" style="margin: 0 5px;"> @MOF.Etimad.Monafasat.Resources.TenderResources.DisplayInputs.UnderEstablished</span>
   <span v-else class="badge badge-warning d-inline-block" style="margin: 0 5px;">{{tender.tenderStatusName}}</span>
</template>
<template v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOppening) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOpenFinancialStage) || tender.tenderStatusId == @((int)Enums.TenderStatus.BiddingOffersCheckedPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersCheckedPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalCheckingPending)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalCheckingPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialCheckingPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalChecking) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersCheckingAndTechnicalEval) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROFinancialCheckingOpening) ||  tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialChecking)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersFinancialChecking) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialChecking) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersFinancialOfferCheckingPending)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersAwarding)  || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalOppening) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersInitialAwardedPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersInitialAwardedConfirmed)">
   <span class="badge badge-warning d-inline-block" style="margin: 0 5px;">{{tender.tenderStatusName}}</span>
</template>
<template v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.Pending) || tender.tenderStatusId == @((int)Enums.TenderStatus.PendingVROAuditerApprove)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.Bidding) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOppenedPending) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalOppeningPending)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersChecking)|| tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOpenFinancialStagePending)|| tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalChecking) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersAwardedPending)
          || tender.unitStatusId == @((int)Enums.TenderUnitStatus.UnderReviewing) || tender.unitStatusId == @((int)Enums.TenderUnitStatus.WaitingUnitSecretaryReview)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.ReturnedFromUnitToAgencyForEdit)
          || (tender.tenderStatusId == @((int)Enums.TenderStatus.UnitStaging) && (tender.unitStatusId == @((int)Enums.TenderUnitStatus.WaitingUnitSecretaryReview)
          ||tender.unitStatusId == @((int)Enums.TenderUnitStatus.WaitingManagerApprove) || tender.unitStatusId == @((int)Enums.TenderUnitStatus.UnderReviewing)
          || tender.unitStatusId == @((int)Enums.TenderUnitStatus.UnderManagerReviewing) ||tender.unitStatusId == @((int)Enums.TenderUnitStatus.TenderTransferdToLevelTwo)
          || tender.unitStatusId == @((int)Enums.TenderUnitStatus.UnderUnitReviewLevelTwo)||tender.unitStatusId == @((int)Enums.TenderUnitStatus.UnderUnitReviewLevelOne)
          || tender.unitStatusId == @((int)Enums.TenderUnitStatus.RejectedByManager) && '@isUnitUser' != 'True') || tender.tenderStatusId == @((int)Enums.TenderStatus.DirectPurchaseOffersChecking)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.DirectPurchaseOffersCheckingApprovePending))">
   <span class="badge badge-warning d-inline-block" style="margin: 0 5px;">{{tender.tenderStatusName}}</span>
</template>
<template v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.Approved)   || tender.tenderStatusId == @((int)Enums.TenderStatus.BiddingApproved)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOppenedConfirmed) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOpenFinancialStageApproved) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalOppeningConfirmed) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersCheckedConfirmed) || tender.tenderStatusId == @((int)Enums.TenderStatus.BiddingOffersCheckedConfirmed)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersAwardedConfirmed)|| tender.tenderStatusId == @((int)Enums.TenderStatus.DirectPurchaseOffersCheckingApproved)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalCheckingConfirmed) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersFinancialOfferCheckingApproved)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialCheckingApproved) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalCheckingApproved) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalOppeningConfirmed)
|| tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalCheckingApproved)


          ">
   <span class="badge badge-success d-inline-block" style="margin: 0 5px;">{{tender.tenderStatusName}}</span>
</template>
<template v-if="tender.tenderStatusId == @((int)Enums.TenderStatus.Canceled) || tender.tenderStatusId == @((int)Enums.TenderStatus.Rejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalOppeningRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOpenFinancialStageRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.BackForCheckingFromPlaint)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersOppenedRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalCheckingRejected)|| tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialCheckingRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersCheckedRejected) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersTechnicalCheckingRejected) || tender.tenderStatusId == @((int)Enums.TenderStatus.BiddingOffersCheckedRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersFinancialOfferCheckingRejected) || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersFinancialCheckingRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.VROOffersTechnicalCheckingRejected) || tender.tenderStatusId == @((int)Enums.TenderStatus.RejectedFromUnit)|| tender.tenderStatusId == @((int)Enums.TenderStatus.OffersAwardedRejected)
          || tender.tenderStatusId == @((int)Enums.TenderStatus.RejectedFromUnit) || (tender.tenderStatusId == @((int)Enums.TenderStatus.UnitStaging) && tender.unitStatusId == @((int)Enums.TenderUnitStatus.RejectedByManager) && '@isUnitUser' == 'True')
          || tender.tenderStatusId == @((int)Enums.TenderStatus.DirectPurchaseOffersCheckingRejected) || tender.tenderStatusId == @((int)Enums.TenderStatus.OffersInitialAwardedRejected)  || tender.tenderStatusId == @((int)Enums.TenderStatus.BackForAwardingFromPlaint)">
   <span class="badge badge-danger d-inline-block" style="margin: 0 5px;">{{tender.tenderStatusName}}</span>
</template>
