@{
   ViewBag.Title = MOF.Etimad.Monafasat.Resources.OfferResources.DisplayInputs.CombinedInvitations;
}
@section breadcrumb
   {
   <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
         <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">@MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.BreadCrumb_Home</a></li>
         <li class="breadcrumb-item active" aria-current="page">@MOF.Etimad.Monafasat.Resources.OfferResources.DisplayInputs.CombinedInvitations</li>
      </ol>
   </nav>
}

<form class="form">
   <div id="TenderGrid" v-cloak>
      <div class="card">
         <div class="">
            <div class="">
               @Html.Partial("_CombinedInvitationsGrid")
            </div>

         </div>
      </div>
      <div class="row">
         <div class="col-12">
            <a :href="BackToTenderGrid()" class="btn btn-outline-primary btn-link pull-right">
               @MOF.Etimad.Monafasat.Resources.SharedResources.DisplayInputs.BackButton
               <div class="ripple-container"></div>
            </a>
         </div>
      </div>
      
   </div>
</form>

<!--endtBody-->
@section scripts{
   <script>
      $(document).ready(function () {
         $('li#menuCombinedInvitationsForSupplier a').addClass('active');
      });
      var Tender = new Vue({
         el: '#TenderGrid',
         data: {
            Tenders: [],
            totalCount: 0,
            currentPage: 1,
            pageSize: 10,
            // Here you define the url of your paginated API
            resource_url: '/Offer/GetAllCombinedInvitationForSupplierAsync',
            queryString: ''
         },
         methods: {
            updateResource: function (data) {
               data.forEach(function (item) {
                  //item.createdAt = item.createdAt.slice(0, 10);
               });
               this.Tenders = data;
               this.totalCount = this.$refs.vpaginator.totalCount;
               this.currentPage = this.$refs.vpaginator.currentPage;
               this.pageSize = this.$refs.vpaginator.pageSize;
            },
            detailsUrl: function (id) {
               return '/Offer/CombinedInvitationDetails?offerIdString=' + id ;
            },
            BackToTenderGrid: function () {
               return '/Tender/AllSuppliersTenders';
            },
            //invitationUrl: function (tenderId) {
            //   return '/Tender/TenderDetailsAsync?tenderId=' + tenderId;
            //},
         }
      });
   </script>
}
